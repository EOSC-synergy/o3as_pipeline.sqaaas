@startuml
title o3as WebApp
skinparam dpi 300

package "GUI" {
    class "App" << (C,blue) component>> {

    }

    class "Chart" << (C, blue) component>> {
        ==props==
        #options
        #series
        #type
        #width
    }

}



package "API" {

    class "o3as" << (A, purple) api >> {
        +/models
        +/data/tco3_zm
        +/data/tco3_return
        +/plots
        +/plots/tco3_zm
        +/plots/tco3_return
    }

    


}

package "Redux" {

    class "Store" << (R, gray) redux >> {
        +plotType
        +plotData
        +modelData
        +SVData
        +ReferenceData

    }

    class "apiSlice" << (R, gray) redux >> {
        This redux wrapper performs api requests\nand handles caching
        ==methods==
        +getModels()
        +getPlots()
        +getRawPlotData(plotType, lat_min, lat_max)
        +getBuildPlotData(plotType, lat_min, lat_max, ref_meas, ref_year)
        
    }

}

package "Utils" {

   
    class "OptionsFormatter" << (J, yellow) utils >> {
        +mergeModelAndSVData(modelData, SVData)
        +updateModelData()
    }
    
    class "pdfCreator" <<(J, yellow) utils >> {
        this utility class allows to export\nthe current plot as a pdf file
        ==methods==
        + createPdfFromCurrentPlot
        - formatBoxPlot
        - formatLinePlot
    }
    
    class "math" <<(J, yellow) utils >> {
        This class performs helpful operations\non the data series

        ==methods==
        +unifyDatasetsToOneDatapoint(modelData, months)
        +calculateSV(modelData, statisticalValues)
    }
    
}

package "node modules" {

    class "pdfmake" << (N, green) library >> {
        ==methods==
        +createPdf()
    } 

    class "apexcharts" <<(N, green) library >> {

    }

}

"apexcharts" <..> "Chart"
"o3as" <..> "apiSlice"
"pdfCreator" <..> "pdfmake"
"Store" <..> "App"
"Store" <..> "OptionsFormatter"
"App" ..> "OptionsFormatter"
"Chart" <.. "OptionsFormatter"
"App" o-- "Chart"

@enduml