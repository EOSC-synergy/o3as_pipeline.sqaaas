@startuml
actor Steve
participant "//<<Component>>//\nModelGroup" as MG #3489eb
participant "Graph\n//Component//" as Graph #3489eb
database "Store\n//Redux//" as Store #808080
participant "apexcharts\n//library//" as apexcharts #ffff00
participant "math utils\n//library//" as math #ffff00

Steve->MG: user selects mean 
activate MG
MG->Store: dispatch(ADD_SV("all", MEAN))
deactivate MG
Graph<--Store: updateHook
Graph->Store: useSelector(state => state.plotType)
Graph->Store: useSelector(state => state.models.data)
Graph->Store: useSelector(state => state.statisticalValues)
Graph->Store: useSelector(state => state.referenceSettings)

Graph<--Store: options
Graph->Store: useSelector(state => state.series)
Graph<--Store: series
Graph->apexcharts: new Chart(options, series)
Graph<--apexcharts: rendered svg chart
Steve<--Graph: user sees updated chart


Steve->SVS: user selects median
SVS->actions: add_percentile(0.50)
SVS<--actions: action 
SVS->Store: dispatch(action)
Store->percRD: reduce(state, action)
percRD->math: calculate_perc(0.50)
percRD<--math: percSeries

Store<--percRD: new state
Graph<--Store: updateHook
Graph->Store: useSelector(state => state.options)
Graph<--Store: options
Graph->Store: useSelector(state => state.series)
Graph<--Store: series
Graph->apexcharts: new Chart(options, series)
Graph<--apexcharts: rendered svg chart
Steve<--Graph: user sees updated chart

@enduml
