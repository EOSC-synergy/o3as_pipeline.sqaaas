@startuml
skinparam style strictuml
actor User as Steve
participant "//<<Component>>//\nModelGroupCard" as MG #3489eb
participant "//<<Component>>//\nGraph" as Graph #3489eb
database "//<<Redux>>//\nStore\n" as Store #808080
participant "//<<Action>>//\naddStatisticalValue" as action #808080
participant "//<<Reducer>>//\naddStatisticalValue" as reducer #808080
participant "//<<Library>>//\napexcharts" as apexcharts #00af57
participant "//<<Utils>>//\nmath" as math #ffff00
participant "//<<Utils>>//\nOptionsFormatter" as formatter #ffff00


Steve->MG: <<user selects mean>> 
activate MG
MG->MG: <<re-render>>
activate MG
MG-->MG:
deactivate MG
MG->action: addStatisticalValue({groupId: "all", sv: "mean"})
activate action
MG<-action: action
deactivate action
MG->Store: dispatch(action)
deactivate MG
activate Store
Store -> reducer: reduce(state, action)

activate reducer
Store <- reducer: state
deactivate reducer
Graph<--Store: updateHook
deactivate Store

activate Graph 
Graph->Store: selectCurrentPlotType()
activate Store
Graph<-Store: plotType
deactivate Store
Graph->Store: selectCurrentPlotSettings()
activate Store
Graph<-Store: plotSettings
deactivate Store
Graph->Store: selectCurrentModelGroupById("all")
activate Store
Graph<-Store: modelData
deactivate Store
Graph->Store: selectCurrentReferenceSettings()
activate Store
Graph<-Store: referenceSettings
deactivate Store


Graph->math: calculateSV(modelData)
activate math
Graph<-math: statisticalValueSeries
deactivate math
Graph->formatter: generatePlotSeries(modelData, statisticalValueSeries)
activate formatter
Graph<-formatter: dataSeries
deactivate formatter
Graph->formatter: generatePlotOptions(plotSettings)
activate formatter
Graph<-formatter: options
deactivate formatter
Graph->apexcharts: new Chart(plotType, dataSeries, options)
activate apexcharts
Graph<-apexcharts: <<rendered SVG on DOM>>
deactivate apexcharts
Steve<--Graph: <<user sees updated graph>>
deactivate Graph

@enduml
