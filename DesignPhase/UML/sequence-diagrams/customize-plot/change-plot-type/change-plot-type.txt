@startuml
actor User
participant "//<<Component>>//\nGraph" as Graph #3489eb
participant "//<<Component>>//\nPlotTypeSelector" as PlotType #3489eb
participant "//<<MaterialDesign>>//\nListBox" as MDListBox #ff8080
database "//<<Redux>>//\nStore\n" as Store #808080
participant "//<<action>>//\nsetType" as setTypeA #808080
participant "//<<reducer>>//\nsetType" as setTypeR #808080
participant "//<<library>>//\napexcharts" as apexcharts #00af57
participant "//<<utils>>//\nOptionsFormatter" as formatter #ffff00

User -> PlotType : <<selects plot type>>
activate PlotType
PlotType -> MDListBox : getSelectedValue()
activate MDListBox
PlotType <-- MDListBox : plotType
deactivate MDListBox
PlotType -> setTypeA : setType(plotType)
activate setTypeA
PlotType <-- setTypeA : action
deactivate setTypeA
PlotType -> Store : dispatch(action)
deactivate PlotType
activate Store
Store -> setTypeR : reduce(state, action)
activate setTypeR
Store <-- setTypeR : state
deactivate setTypeR
Graph <-- Store : updateHook
activate Graph
Graph->Store: selectCurrentPlotType()
Graph<--Store: plotType
Graph->Store: selectCurrentPlotSettings()
Graph<--Store: plotSettings
Graph->Store: selectCurrentReferenceSettings()
Graph<--Store: referenceSettings
deactivate Store
Graph->formatter: generatePlotOptions(plotSettings)
activate formatter
Graph<--formatter: options
deactivate formatter
Graph->apexcharts: new Chart(plotType, dataSeries, options)
activate apexcharts
Graph<--apexcharts: <<rendered svg on DOM>>
deactivate apexcharts
User <-- Graph : <<visual update>>
deactivate Graph
@enduml